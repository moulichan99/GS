class _stack{
stack<int> s;
int minEle;
public :
    int getMin();
    int pop();
    void push(int);
};
*/
/*returns min element from stack*/
int _stack :: getMin()
{
    if(s.empty())
        return -1;
    return minEle;
}
/*returns poped element from stack*/
int _stack ::pop()
{
   if(s.empty())
        return -1;
   s.pop();
   int t = s.top();
   s.pop();
   if(!s.empty())
        minEle = s.top();
   return t;        
}
/*push element x into the stack*/
void _stack::push(int x)
{
   if(s.empty())
       minEle = INT_MAX;
   if(x<minEle)
        minEle = x;
   s.push(x);
   s.push(minEle);
}


main logic :
we insert element with that level minimum element 
element < min then element + minele at top if we remove also we got next level minimum element;
